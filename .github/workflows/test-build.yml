name: Test Build
on:
  pull_request:
    branches: [ main, master ]

env:
  AWS_S3_URL: https://${{ vars.AWS_TEST_BUCKET }}.${{ vars.AWS_ENDPOINT }}

jobs:
  Linters:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install -g yarn && yarn
    - name: Run eslint
      run: yarn check:js
    - name: Run css linter
      run: yarn check:css
      
  Tests:
    needs: Linters
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install -g yarn && yarn
    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps
    - name: Run unit tests
      run: yarn tests:unit
    - name: Run e2e tests
      run: yarn tests:e2e
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  Lighthouse:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install -g yarn && yarn
    - name: Create folder for artifacts
      run: mkdir ./metrics
    - name: Run server
      run: yarn start:lighthouse
    - name: Run ligthhouse
      run: yarn check:metrics
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: metrics
        path: metrics/
        retention-days: 30

  Deploy_Test_Domain:
    permissions:
      pull-requests: write
    needs: [Linters, Tests]
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm install -g yarn && yarn
    - name: Build
      run: echo "Build prod version"
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: app-test-build
        path: client
        retention-days: 30
    - name: Upload to S3
      id: s3
      uses: VKCOM/gh-actions/VKUI/s3@main
      with:
        awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
        awsSecretAccessKey: ${{ secrets.AWS_SECRET_KEY }}
        awsBucket: ${{ vars.AWS_TEST_BUCKET }}
        awsEndpoint: https://${{ vars.AWS_ENDPOINT }}
        command: upload
        commandUploadSrc: client
        commandUploadDist: testdeploy-${{github.run_id}}
    - uses: actions/github-script@v6
      if: ${{ steps.s3.outcome == 'success' }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `
            ðŸ‘‹ Build a ready!
            You can check online by goes to ${{ env.AWS_S3_URL }}/testdeploy-${{github.run_id}}/index.html
            `
          })
